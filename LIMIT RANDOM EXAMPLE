/****************************************
1. Go to the via count
example: https://via.giantpartners.com/audiences/26524

2. Go to the admin view
Click the admin button or add /admin before /audiences (https://via.giantpartners.com/admin/audiences/26524)

3. Copy the query

4. Go to Snowflake, Create New SQL Worksheet
https://app.snowflake.com/

5. Select the DATA_ENGINERRING database from the top

6. Paste the query copied from the via count:
****************************************/

SELECT COUNT(*) AS count
  FROM (
    SELECT *
    FROM (
      SELECT *
      FROM (
        SELECT A.ADDRESS_ZIP AS D_address_zip, B.EMAIL AS D_email, B.EMAIL_LEVEL AS D_email_level, A.individual_id AS D_individual_id, A._ID AS D_A_ID, B._ID AS D_B_ID
        FROM VIA.PRODUCTION.CONSUMER_I361_20240628 AS A
        INNER JOIN VIA.PRODUCTION.EMAIL_I309_20240628 AS B ON (A.MATCHKEY = B.MATCHKEY AND A.FIRST = B.FIRST AND B.DNE IS NULL)
        WHERE (A.dpv_indicator = 'Y') AND (A.reading_interest = 'Y') AND (B.EMAIL IS NOT NULL) AND (B.DNE IS NULL)
      ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_address_zip ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
    ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_email ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
  );


/****************************************
7. Replace the first row with:
CREATE OR REPLACE TABLE TABLENAME AS SELECT *
****************************************/
CREATE OR REPLACE TABLE TABLENAME AS SELECT *
  FROM (
    SELECT *
    FROM (
      SELECT *
      FROM (
        SELECT A.ADDRESS_ZIP AS D_address_zip, B.EMAIL AS D_email, B.EMAIL_LEVEL AS D_email_level, A.individual_id AS D_individual_id, A._ID AS D_A_ID, B._ID AS D_B_ID
        FROM VIA.PRODUCTION.CONSUMER_I361_20240628 AS A
        INNER JOIN VIA.PRODUCTION.EMAIL_I309_20240628 AS B ON (A.MATCHKEY = B.MATCHKEY AND A.FIRST = B.FIRST AND B.DNE IS NULL)
        WHERE (A.dpv_indicator = 'Y') AND (A.reading_interest = 'Y') AND (B.EMAIL IS NOT NULL) AND (B.DNE IS NULL)
      ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_address_zip ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
    ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_email ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
  );


/****************************************
8. Add the Selects you'd like after the last SELECT * FROM (
(make sure to not remove any columns already selected!)
****************************************/
CREATE OR REPLACE TABLE TABLENAME AS SELECT *
  FROM (
    SELECT *
    FROM (
      SELECT *
      FROM (
        SELECT 
            A.FIRST,A.LAST,A.ADDRESS,A.ADDRESS1,A.ADDRESS2,A.CITY,A.STATE,A.ZIP,A.ZIP4,B.EMAIL ---- ADD YOUR SELECTS HERE
            ,A.ADDRESS_ZIP AS D_address_zip, B.EMAIL AS D_email, B.EMAIL_LEVEL AS D_email_level, A.individual_id AS D_individual_id, A._ID AS D_A_ID, B._ID AS D_B_ID
        FROM VIA.PRODUCTION.CONSUMER_I361_20240628 AS A
        INNER JOIN VIA.PRODUCTION.EMAIL_I309_20240628 AS B ON (A.MATCHKEY = B.MATCHKEY AND A.FIRST = B.FIRST AND B.DNE IS NULL)
        WHERE (A.dpv_indicator = 'Y') AND (A.reading_interest = 'Y') AND (B.EMAIL IS NOT NULL) AND (B.DNE IS NULL)
      ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_address_zip ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
    ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_email ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
  );


/****************************************
9. (OPTIONAL) Add ORDER BY RANDOM() to randomize the order of the data 
(mimics ORDER BY NEWID() from TSQL)

10. (OPTIONAL) Add LIMIT N to limit the amount of records 
(mimics SELECT TOP(N) from TSQL)

Alternatively, using SAMPLE(N) will randomly select N records.
It combines ORDER BY RANDOM() and LIMIT() into one.
However, it is limited to 1,000,000.
https://stackoverflow.com/questions/71040642/randomize-selection-from-snowflake-sql
****************************************/
CREATE OR REPLACE TABLE TABLENAME AS SELECT *
  FROM (
    SELECT *
    FROM (
      SELECT *
      FROM (
        SELECT 
            A.FIRST,A.LAST,A.ADDRESS,A.ADDRESS1,A.ADDRESS2,A.CITY,A.STATE,A.ZIP,A.ZIP4,B.EMAIL ---- ADD YOUR SELECTS HERE
            ,A.ADDRESS_ZIP AS D_address_zip, B.EMAIL AS D_email, B.EMAIL_LEVEL AS D_email_level, A.individual_id AS D_individual_id, A._ID AS D_A_ID, B._ID AS D_B_ID
        FROM VIA.PRODUCTION.CONSUMER_I361_20240628 AS A
        INNER JOIN VIA.PRODUCTION.EMAIL_I309_20240628 AS B ON (A.MATCHKEY = B.MATCHKEY AND A.FIRST = B.FIRST AND B.DNE IS NULL)
        WHERE (A.dpv_indicator = 'Y') AND (A.reading_interest = 'Y') AND (B.EMAIL IS NOT NULL) AND (B.DNE IS NULL)
      ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_address_zip ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
    ) QUALIFY (ROW_NUMBER() OVER (PARTITION BY D_email ORDER BY D_email_level, D_individual_id, D_A_ID, D_B_ID)) = 1
  )
ORDER BY RANDOM()
LIMIT 10;
--SAMPLE(N);

/*

11. When your query is ready, highlight it, then click the Run button at the top-rght.
(you can select priority level by selecting the warehouse in the top-right. higher priority = faster speeds)

12. When your query has finished, export your data by clicking the Download Results button near the bottom-right.

*/

SELECT *
FROM TABLENAME;
